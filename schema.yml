openapi: 3.0.3
info:
  title: Gozle ADS
  version: 1.1.3
  description: Gozle ADS API
paths:
  /api/v1/banner/:
    get:
      operationId: banner_list
      parameters:
      - in: query
        name: birth_year
        schema:
          type: number
        description: User birth year
      - in: query
        name: cities
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: devices
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: provinces
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      tags:
      - banner
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBannerList'
          description: ''
    post:
      operationId: banner_create
      tags:
      - banner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Banner'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Banner'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Banner'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Banner'
          description: ''
  /api/v1/banner/{id}/:
    get:
      operationId: banner_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this banner.
        required: true
      tags:
      - banner
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Banner'
          description: ''
    put:
      operationId: banner_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this banner.
        required: true
      tags:
      - banner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Banner'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Banner'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Banner'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Banner'
          description: ''
    patch:
      operationId: banner_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this banner.
        required: true
      tags:
      - banner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBanner'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBanner'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBanner'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Banner'
          description: ''
    delete:
      operationId: banner_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this banner.
        required: true
      tags:
      - banner
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/banner/ads/:
    get:
      operationId: banner_ads_retrieve
      description: Banner getter by less view count
      parameters:
      - in: query
        name: birth_year
        schema:
          type: integer
        description: User birth year
      - in: query
        name: devices
        schema:
          type: array
          items:
            type: integer
        description: Device ID
      - in: query
        name: provinces
        schema:
          type: array
          items:
            type: integer
        description: Province ID
      tags:
      - banner
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Banner'
          description: ''
  /api/v1/cities/:
    get:
      operationId: cities_list
      parameters:
      - in: query
        name: province
        schema:
          type: string
      tags:
      - cities
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/City'
          description: ''
    post:
      operationId: cities_create
      tags:
      - cities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/City'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/City'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/City'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
          description: ''
  /api/v1/cities/{id}/:
    get:
      operationId: cities_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this city.
        required: true
      tags:
      - cities
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
          description: ''
    put:
      operationId: cities_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this city.
        required: true
      tags:
      - cities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/City'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/City'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/City'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
          description: ''
    patch:
      operationId: cities_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this city.
        required: true
      tags:
      - cities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCity'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
          description: ''
    delete:
      operationId: cities_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this city.
        required: true
      tags:
      - cities
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/devices/:
    get:
      operationId: devices_list
      tags:
      - devices
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
          description: ''
    post:
      operationId: devices_create
      tags:
      - devices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
  /api/v1/devices/{id}/:
    get:
      operationId: devices_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this device.
        required: true
      tags:
      - devices
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
    put:
      operationId: devices_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this device.
        required: true
      tags:
      - devices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Device'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
    patch:
      operationId: devices_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this device.
        required: true
      tags:
      - devices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDevice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDevice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDevice'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: ''
    delete:
      operationId: devices_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this device.
        required: true
      tags:
      - devices
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/imput/:
    get:
      operationId: imput_list
      parameters:
      - in: query
        name: birth_year
        schema:
          type: number
        description: User birth year
      - in: query
        name: cities
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: devices
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: provinces
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      tags:
      - imput
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedImputList'
          description: ''
    post:
      operationId: imput_create
      tags:
      - imput
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Imput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Imput'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Imput'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Imput'
          description: ''
  /api/v1/imput/{id}/:
    get:
      operationId: imput_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this imput.
        required: true
      tags:
      - imput
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Imput'
          description: ''
    put:
      operationId: imput_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this imput.
        required: true
      tags:
      - imput
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Imput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Imput'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Imput'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Imput'
          description: ''
    patch:
      operationId: imput_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this imput.
        required: true
      tags:
      - imput
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedImput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedImput'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedImput'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Imput'
          description: ''
    delete:
      operationId: imput_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this imput.
        required: true
      tags:
      - imput
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/imput/ads/:
    get:
      operationId: imput_ads_retrieve
      description: Imput getter by less view count
      parameters:
      - in: query
        name: birth_year
        schema:
          type: integer
        description: User birth year
      - in: query
        name: devices
        schema:
          type: array
          items:
            type: integer
        description: Device ID
      - in: query
        name: provinces
        schema:
          type: array
          items:
            type: integer
        description: Province ID
      tags:
      - imput
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Imput'
          description: ''
  /api/v1/provinces/:
    get:
      operationId: provinces_list
      tags:
      - provinces
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Province'
          description: ''
    post:
      operationId: provinces_create
      tags:
      - provinces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Province'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Province'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Province'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Province'
          description: ''
  /api/v1/provinces/{id}/:
    get:
      operationId: provinces_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this province.
        required: true
      tags:
      - provinces
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Province'
          description: ''
    put:
      operationId: provinces_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this province.
        required: true
      tags:
      - provinces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Province'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Province'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Province'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Province'
          description: ''
    patch:
      operationId: provinces_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this province.
        required: true
      tags:
      - provinces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProvince'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProvince'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProvince'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Province'
          description: ''
    delete:
      operationId: provinces_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this province.
        required: true
      tags:
      - provinces
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/video/:
    get:
      operationId: video_list
      parameters:
      - in: query
        name: birth_year
        schema:
          type: number
        description: User birth year
      - in: query
        name: cities
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: devices
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: provinces
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      tags:
      - video
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVideoList'
          description: ''
    post:
      operationId: video_create
      tags:
      - video
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Video'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Video'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
  /api/v1/video/{id}/:
    get:
      operationId: video_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this video.
        required: true
      tags:
      - video
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    put:
      operationId: video_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this video.
        required: true
      tags:
      - video
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Video'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Video'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    patch:
      operationId: video_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this video.
        required: true
      tags:
      - video
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVideo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVideo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVideo'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    delete:
      operationId: video_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this video.
        required: true
      tags:
      - video
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/video/ads/:
    get:
      operationId: video_ads_retrieve
      description: Video getter by less view count
      parameters:
      - in: query
        name: birth_year
        schema:
          type: integer
        description: User birth year
      - in: query
        name: devices
        schema:
          type: array
          items:
            type: integer
        description: Device ID
      - in: query
        name: provinces
        schema:
          type: array
          items:
            type: integer
        description: Province ID
      tags:
      - video
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
components:
  schemas:
    Banner:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
          maxLength: 255
        description:
          type: string
        link:
          type: string
          format: uri
          maxLength: 200
        min_age:
          type: integer
          maximum: 80
          minimum: 0
          nullable: true
        max_age:
          type: integer
          maximum: 80
          minimum: 0
          nullable: true
        status:
          $ref: '#/components/schemas/Status360Enum'
        view_count:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
        devices:
          type: array
          items:
            type: integer
        uuid:
          type: string
          format: uuid
        cycle_duration:
          type: integer
          maximum: 2147483647
          minimum: 60
        provinces:
          type: array
          items:
            type: integer
        cities:
          type: array
          items:
            type: integer
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
      required:
      - cities
      - description
      - devices
      - ends_at
      - id
      - image
      - link
      - provinces
      - starts_at
      - text
      - view_count
    City:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 15
        slug:
          type: string
          nullable: true
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - id
      - name
    Device:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        platforms:
          type: array
          items:
            $ref: '#/components/schemas/PlatformsEnum'
      required:
      - id
      - name
      - platforms
    Imput:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        link:
          type: string
          format: uri
          maxLength: 200
        min_age:
          type: integer
          maximum: 80
          minimum: 0
          nullable: true
        max_age:
          type: integer
          maximum: 80
          minimum: 0
          nullable: true
        status:
          $ref: '#/components/schemas/Status360Enum'
        view_count:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
        devices:
          type: array
          items:
            type: integer
        uuid:
          type: string
          format: uuid
        provinces:
          type: array
          items:
            type: integer
        cities:
          type: array
          items:
            type: integer
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
      required:
      - cities
      - devices
      - ends_at
      - id
      - image
      - link
      - provinces
      - starts_at
      - view_count
    PaginatedBannerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Banner'
    PaginatedImputList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Imput'
    PaginatedVideoList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Video'
    PatchedBanner:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
          maxLength: 255
        description:
          type: string
        link:
          type: string
          format: uri
          maxLength: 200
        min_age:
          type: integer
          maximum: 80
          minimum: 0
          nullable: true
        max_age:
          type: integer
          maximum: 80
          minimum: 0
          nullable: true
        status:
          $ref: '#/components/schemas/Status360Enum'
        view_count:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
        devices:
          type: array
          items:
            type: integer
        uuid:
          type: string
          format: uuid
        cycle_duration:
          type: integer
          maximum: 2147483647
          minimum: 60
        provinces:
          type: array
          items:
            type: integer
        cities:
          type: array
          items:
            type: integer
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
    PatchedCity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 15
        slug:
          type: string
          nullable: true
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
    PatchedDevice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        platforms:
          type: array
          items:
            $ref: '#/components/schemas/PlatformsEnum'
    PatchedImput:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        link:
          type: string
          format: uri
          maxLength: 200
        min_age:
          type: integer
          maximum: 80
          minimum: 0
          nullable: true
        max_age:
          type: integer
          maximum: 80
          minimum: 0
          nullable: true
        status:
          $ref: '#/components/schemas/Status360Enum'
        view_count:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
        devices:
          type: array
          items:
            type: integer
        uuid:
          type: string
          format: uuid
        provinces:
          type: array
          items:
            type: integer
        cities:
          type: array
          items:
            type: integer
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
    PatchedProvince:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 10
        slug:
          type: string
          nullable: true
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
    PatchedVideo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
          maxLength: 255
        description:
          type: string
        link:
          type: string
          format: uri
          maxLength: 200
        video:
          type: string
          format: uri
          pattern: (?:mov|avi|mp4|webm|mkv|m3u8)$
        min_age:
          type: integer
          maximum: 80
          minimum: 0
          nullable: true
        max_age:
          type: integer
          maximum: 80
          minimum: 0
          nullable: true
        status:
          $ref: '#/components/schemas/VideoStatusEnum'
        view_count:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
        devices:
          type: array
          items:
            type: integer
        uuid:
          type: string
          format: uuid
        skip_duration:
          type: integer
          maximum: 20
          minimum: 3
          nullable: true
        provinces:
          type: array
          items:
            type: integer
        cities:
          type: array
          items:
            type: integer
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
    PlatformsEnum:
      enum:
      - app
      - web
      type: string
      description: |-
        * `app` - App
        * `web` - Web
    Province:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 10
        slug:
          type: string
          nullable: true
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - id
      - name
    Status360Enum:
      enum:
      - active
      - hidden
      - deleted
      - test
      type: string
      description: |-
        * `active` - Active
        * `hidden` - Hidden
        * `deleted` - Deleted
        * `test` - Test
    Video:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
          maxLength: 255
        description:
          type: string
        link:
          type: string
          format: uri
          maxLength: 200
        video:
          type: string
          format: uri
          pattern: (?:mov|avi|mp4|webm|mkv|m3u8)$
        min_age:
          type: integer
          maximum: 80
          minimum: 0
          nullable: true
        max_age:
          type: integer
          maximum: 80
          minimum: 0
          nullable: true
        status:
          $ref: '#/components/schemas/VideoStatusEnum'
        view_count:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
        devices:
          type: array
          items:
            type: integer
        uuid:
          type: string
          format: uuid
        skip_duration:
          type: integer
          maximum: 20
          minimum: 3
          nullable: true
        provinces:
          type: array
          items:
            type: integer
        cities:
          type: array
          items:
            type: integer
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
      required:
      - cities
      - description
      - devices
      - ends_at
      - id
      - image
      - link
      - provinces
      - starts_at
      - text
      - video
      - view_count
    VideoStatusEnum:
      enum:
      - active
      - hidden
      - converting
      - completed
      - deleted
      - test
      type: string
      description: |-
        * `active` - Active
        * `hidden` - Hidden
        * `converting` - Converting
        * `completed` - Completed
        * `deleted` - Deleted
        * `test` - Test
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
