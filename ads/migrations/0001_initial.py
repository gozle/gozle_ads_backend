# Generated by Django 4.2.5 on 2023-10-11 08:02

import ads.fields
import ads.models
import django.core.validators
from django.db import migrations, models
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('platforms', multiselectfield.db.fields.MultiSelectField(choices=[('app', 'App'), ('web', 'Web')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField()),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('age_from', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(80)])),
                ('age_to', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(80)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('text', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('image', ads.fields.WEBPField(upload_to=ads.models.video_folder, verbose_name='Image')),
                ('video', models.FileField(upload_to='video/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['MOV', 'avi', 'mp4', 'webm', 'mkv'])])),
                ('devices', models.ManyToManyField(to='ads.device', verbose_name='platforms')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Imput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField()),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('age_from', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(80)])),
                ('age_to', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(80)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', ads.fields.WEBPField(upload_to=ads.models.imput_folder, verbose_name='Image')),
                ('devices', models.ManyToManyField(to='ads.device', verbose_name='platforms')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField()),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('age_from', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(80)])),
                ('age_to', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(80)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('text', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('image', ads.fields.WEBPField(upload_to=ads.models.banner_folder, verbose_name='Image')),
                ('devices', models.ManyToManyField(to='ads.device', verbose_name='platforms')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
